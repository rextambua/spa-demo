{"ast":null,"code":"var _jsxFileName = \"/Users/nitro/Desktop/spa-demo/frontend/src/pages/EventDetail.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { json, redirect, useRouteLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventDetail() {\n  _s();\n  const data = useRouteLoaderData('event-detail');\n  return /*#__PURE__*/_jsxDEV(EventItem, {\n    event: data.event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 12\n  }, this);\n}\n_s(EventDetail, \"4DBW6nwrvXRMSwRBgIay5Sszcp8=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetail;\nexport default EventDetail;\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    throw json({\n      message: 'could not fetch events'\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nexport async function loader(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const id = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    throw json({\n      message: 'could not fetch selected event details'\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nexport async function action(_ref2) {\n  let {\n    request,\n    params\n  } = _ref2;\n  const eventId = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + eventId, {\n    method: request.method\n  });\n  if (!response.ok) {\n    throw json({\n      message: 'Could not delete event.'\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/events');\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetail\");","map":{"version":3,"names":["React","json","redirect","useRouteLoaderData","EventItem","jsxDEV","_jsxDEV","EventDetail","_s","data","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loadEvents","response","fetch","ok","message","status","resData","events","loader","_ref","request","params","id","eventId","action","_ref2","method","$RefreshReg$"],"sources":["/Users/nitro/Desktop/spa-demo/frontend/src/pages/EventDetail.js"],"sourcesContent":["import React from 'react';\nimport {json, redirect, useRouteLoaderData} from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\n\nfunction EventDetail() {\n    const data = useRouteLoaderData('event-detail')\n\n    return <EventItem event={data.event}/>\n}\n\nexport default EventDetail;\n\nasync function loadEvents (){\n    const response = await fetch('http://localhost:8080/events');\n\n    if (!response.ok) {\n        throw json(\n            {message : 'could not fetch events'},\n            {status:500});\n    } else {\n        const  resData = await response.json();\n        return resData.events;\n    }\n}\n\nexport async function loader({ request, params }) {\n    const id = params.eventId;\n    const response = await fetch('http://localhost:8080/events/' + id);\n    if (!response.ok) {\n        throw json(\n            {message : 'could not fetch selected event details'},\n            {status:500});\n    } else {\n        return response;\n    }\n}\n\nexport async function action ({request, params}) {\n    const eventId = params.eventId;\n\n    const response = await fetch('http://localhost:8080/events/' + eventId, {\n        method: request.method\n    })\n    if (!response.ok) {\n        throw json(\n            {message : 'Could not delete event.'},\n            {status:500});\n    }\n    return redirect('/events');\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,IAAI,EAAEC,QAAQ,EAAEC,kBAAkB,QAAO,kBAAkB;AACnE,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAMC,IAAI,GAAGN,kBAAkB,CAAC,cAAc,CAAC;EAE/C,oBAAOG,OAAA,CAACF,SAAS;IAACM,KAAK,EAAED,IAAI,CAACC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAC1C;AAACN,EAAA,CAJQD,WAAW;EAAA,QACHJ,kBAAkB;AAAA;AAAAY,EAAA,GAD1BR,WAAW;AAMpB,eAAeA,WAAW;AAE1B,eAAeS,UAAUA,CAAA,EAAG;EACxB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IACd,MAAMlB,IAAI,CACN;MAACmB,OAAO,EAAG;IAAwB,CAAC,EACpC;MAACC,MAAM,EAAC;IAAG,CAAC,CAAC;EACrB,CAAC,MAAM;IACH,MAAOC,OAAO,GAAG,MAAML,QAAQ,CAAChB,IAAI,CAAC,CAAC;IACtC,OAAOqB,OAAO,CAACC,MAAM;EACzB;AACJ;AAEA,OAAO,eAAeC,MAAMA,CAAAC,IAAA,EAAsB;EAAA,IAArB;IAAEC,OAAO;IAAEC;EAAO,CAAC,GAAAF,IAAA;EAC5C,MAAMG,EAAE,GAAGD,MAAM,CAACE,OAAO;EACzB,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGU,EAAE,CAAC;EAClE,IAAI,CAACX,QAAQ,CAACE,EAAE,EAAE;IACd,MAAMlB,IAAI,CACN;MAACmB,OAAO,EAAG;IAAwC,CAAC,EACpD;MAACC,MAAM,EAAC;IAAG,CAAC,CAAC;EACrB,CAAC,MAAM;IACH,OAAOJ,QAAQ;EACnB;AACJ;AAEA,OAAO,eAAea,MAAMA,CAAAC,KAAA,EAAqB;EAAA,IAAnB;IAACL,OAAO;IAAEC;EAAM,CAAC,GAAAI,KAAA;EAC3C,MAAMF,OAAO,GAAGF,MAAM,CAACE,OAAO;EAE9B,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGW,OAAO,EAAE;IACpEG,MAAM,EAAEN,OAAO,CAACM;EACpB,CAAC,CAAC;EACF,IAAI,CAACf,QAAQ,CAACE,EAAE,EAAE;IACd,MAAMlB,IAAI,CACN;MAACmB,OAAO,EAAG;IAAyB,CAAC,EACrC;MAACC,MAAM,EAAC;IAAG,CAAC,CAAC;EACrB;EACA,OAAOnB,QAAQ,CAAC,SAAS,CAAC;AAC9B;AAAC,IAAAa,EAAA;AAAAkB,YAAA,CAAAlB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}