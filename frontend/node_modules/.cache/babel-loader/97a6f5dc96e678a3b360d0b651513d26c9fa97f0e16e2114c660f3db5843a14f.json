{"ast":null,"code":"var _jsxFileName = \"/Users/nitro/Desktop/spa-demo/frontend/src/pages/EventDetail.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { json, useRouteLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventDetail() {\n  _s();\n  const data = useRouteLoaderData('event-detail');\n  return /*#__PURE__*/_jsxDEV(EventItem, {\n    event: data.event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 12\n  }, this);\n}\n_s(EventDetail, \"4DBW6nwrvXRMSwRBgIay5Sszcp8=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetail;\nexport default EventDetail;\nexport async function loader(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const id = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    throw json({\n      message: 'could not fetch selected event details'\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetail\");","map":{"version":3,"names":["React","json","useRouteLoaderData","EventItem","jsxDEV","_jsxDEV","EventDetail","_s","data","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","_ref","request","params","id","eventId","response","fetch","ok","message","status","$RefreshReg$"],"sources":["/Users/nitro/Desktop/spa-demo/frontend/src/pages/EventDetail.js"],"sourcesContent":["import React from 'react';\nimport {json, useRouteLoaderData} from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\n\nfunction EventDetail() {\n    const data = useRouteLoaderData('event-detail')\n\n    return <EventItem event={data.event}/>\n}\n\nexport default EventDetail;\n\nexport async function loader({ request, params }) {\n    const id = params.eventId;\n    const response = await fetch('http://localhost:8080/events/' + id);\n    if (!response.ok) {\n        throw json(\n            {message : 'could not fetch selected event details'},\n            {status:500});\n    } else {\n        return response;\n    }\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,IAAI,EAAEC,kBAAkB,QAAO,kBAAkB;AACzD,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAMC,IAAI,GAAGN,kBAAkB,CAAC,cAAc,CAAC;EAE/C,oBAAOG,OAAA,CAACF,SAAS;IAACM,KAAK,EAAED,IAAI,CAACC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAC1C;AAACN,EAAA,CAJQD,WAAW;EAAA,QACHJ,kBAAkB;AAAA;AAAAY,EAAA,GAD1BR,WAAW;AAMpB,eAAeA,WAAW;AAE1B,OAAO,eAAeS,MAAMA,CAAAC,IAAA,EAAsB;EAAA,IAArB;IAAEC,OAAO;IAAEC;EAAO,CAAC,GAAAF,IAAA;EAC5C,MAAMG,EAAE,GAAGD,MAAM,CAACE,OAAO;EACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,CAAC;EAClE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IACd,MAAMtB,IAAI,CACN;MAACuB,OAAO,EAAG;IAAwC,CAAC,EACpD;MAACC,MAAM,EAAC;IAAG,CAAC,CAAC;EACrB,CAAC,MAAM;IACH,OAAOJ,QAAQ;EACnB;AACJ;AAAC,IAAAP,EAAA;AAAAY,YAAA,CAAAZ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}