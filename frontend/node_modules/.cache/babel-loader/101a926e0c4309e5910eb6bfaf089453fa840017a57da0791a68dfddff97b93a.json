{"ast":null,"code":"var _jsxFileName = \"/Users/nitro/Desktop/spa-demo/frontend/src/pages/Events.js\",\n  _s = $RefreshSig$();\nimport EventsList from '../components/EventsList';\nimport { useLoaderData } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData();\n  if (data.isError) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 16\n    }, this);\n  }\n  const events = data.events;\n  return /*#__PURE__*/_jsxDEV(EventsList, {\n    events: events\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 14\n  }, this);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport const eventsLoader = async () => {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    return {\n      isError: true,\n      message: \"could not fetch\"\n    };\n  } else {\n    return response;\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["EventsList","useLoaderData","jsxDEV","_jsxDEV","EventsPage","_s","data","isError","children","message","fileName","_jsxFileName","lineNumber","columnNumber","events","_c","eventsLoader","response","fetch","ok","$RefreshReg$"],"sources":["/Users/nitro/Desktop/spa-demo/frontend/src/pages/Events.js"],"sourcesContent":["\nimport EventsList from '../components/EventsList';\nimport {useLoaderData} from \"react-router-dom\";\n\nfunction EventsPage() {\n    const data =useLoaderData();\n    if(data.isError){\n        return <p>{data.message}</p>\n    }\n    const events = data.events\n    return (\n             <EventsList events={events} />\n    );\n}\n\nexport default EventsPage;\n\nexport const eventsLoader = async () => {\n    const response = await fetch('http://localhost:8080/events');\n\n    if (!response.ok) {\n        return {isError: true, message: \"could not fetch\"}\n    } else {\n\n        return response;\n    }}"],"mappings":";;AACA,OAAOA,UAAU,MAAM,0BAA0B;AACjD,SAAQC,aAAa,QAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAMC,IAAI,GAAEL,aAAa,CAAC,CAAC;EAC3B,IAAGK,IAAI,CAACC,OAAO,EAAC;IACZ,oBAAOJ,OAAA;MAAAK,QAAA,EAAIF,IAAI,CAACG;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAChC;EACA,MAAMC,MAAM,GAAGR,IAAI,CAACQ,MAAM;EAC1B,oBACSX,OAAA,CAACH,UAAU;IAACc,MAAM,EAAEA;EAAO;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAE3C;AAACR,EAAA,CATQD,UAAU;EAAA,QACHH,aAAa;AAAA;AAAAc,EAAA,GADpBX,UAAU;AAWnB,eAAeA,UAAU;AAEzB,OAAO,MAAMY,YAAY,GAAG,MAAAA,CAAA,KAAY;EACpC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IACd,OAAO;MAACZ,OAAO,EAAE,IAAI;MAAEE,OAAO,EAAE;IAAiB,CAAC;EACtD,CAAC,MAAM;IAEH,OAAOQ,QAAQ;EACnB;AAAC,CAAC;AAAA,IAAAF,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}